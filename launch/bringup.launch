<launch>

  <!-- Turtlebot -->
  <arg name="base"              default="$(env TURTLEBOT_BASE)"         doc="mobile base type [create, roomba]"/>
  <arg name="battery"           default="$(env TURTLEBOT_BATTERY)"      doc="kernel provided locatio for battery info, use /proc/acpi/battery/BAT0 in 2.6 or earlier kernels." />
  <arg name="stacks"            default="$(env TURTLEBOT_STACKS)"       doc="stack type displayed in visualisation/simulation [circles, hexagons]"/>
  <arg name="3d_sensor"         default="$(env TURTLEBOT_3D_SENSOR)"    doc="3d sensor types [kinect, asus_xtion_pro]"/>
  <arg name="simulation"        default="$(env TURTLEBOT_SIMULATION)"   doc="set flags to indicate this turtle is run in simulation mode."/>
  <arg name="serialport"        default="$(env TURTLEBOT_SERIAL_PORT)"  doc="used by create to configure the port it is connected on [/dev/ttyUSB0, /dev/ttyS0]"/>

  <param name="/use_sim_time" value="$(arg simulation)"/>

  <include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="stacks" value="$(arg stacks)" />
    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
  </include>

  <include file="$(find turtlebot_bringup)/launch/includes/mobile_base.launch.xml">
    <arg name="base" value="$(arg base)" />
    <arg name="serialport" value="$(arg serialport)" />
  </include>

  <include unless="$(eval arg('battery') == 'None')" file="$(find turtlebot_bringup)/launch/includes/netbook.launch.xml">
    <arg name="battery" value="$(arg battery)" />
  </include>

  <!-- 3D sensor without laser scan -->
  <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
    <arg name="rgb_processing"                  value="true"/>
    <arg name="ir_processing"                   value="false"/>
    <arg name="depth_processing"                value="false"/>
    <arg name="depth_registered_processing"     value="false"/>
    <arg name="disparity_processing"            value="false"/>
    <arg name="disparity_registered_processing" value="false"/>
    <arg name="scan_processing"                 value="false"/>
  </include>

  <!-- Safety (reactive) controller -->
  <include file="$(find turtlebot_bringup)/launch/includes/kobuki/safety_controller.launch.xml"/>

  <!-- Default velocity smoother for Web control -->
  <node pkg="nodelet" type="nodelet" name="default_velocity_smoother" args="load yocs_velocity_smoother/VelocitySmootherNodelet mobile_base_nodelet_manager">
    <rosparam file="$(find turtlebot_bringup)/param/defaults/smoother.yaml" command="load"/>
    <remap from="default_velocity_smoother/smooth_cmd_vel" to="cmd_vel_mux/input/teleop"/>

    <!-- Robot velocity feedbacks; use the one configured as base default -->
    <remap from="default_velocity_smoother/odometry" to="odom"/>
    <remap from="default_velocity_smoother/robot_cmd_vel" to="mobile_base/commands/velocity"/>
  </node>

  <!-- Auto docking -->
  <node pkg="nodelet" type="nodelet" name="dock_drive" args="load kobuki_auto_docking/AutoDockingNodelet mobile_base_nodelet_manager">
    <rosparam file="$(find kobuki_auto_docking)/param/auto_docking.yaml" command="load"/>
    <remap from="dock_drive/odom" to="odom"/>
    <remap from="dock_drive/core" to="mobile_base/sensors/core"/>
    <remap from="dock_drive/dock_ir" to="mobile_base/sensors/dock_ir"/>
    <remap from="dock_drive/motor_power" to="mobile_base/commands/motor_power"/>
    <remap from="dock_drive/velocity" to="default_velocity_smoother/raw_cmd_vel"/>
  </node>

</launch>
